@using Datos.Models;

@model Datos.Models.tarjeta

@{
    ViewBag.Title = "Create";
    //IEnumerable<evento> seleccion_eventos = ViewData["seleccion_eventos"] as IEnumerable<evento>;
}

<h2>Crear Tarjeta</h2>

@if (!string.IsNullOrEmpty(ViewBag.Success))
{
    <div class="alert alert-success"><strong>OK! </strong>@ViewBag.Success</div>
}
else
{
    if (!string.IsNullOrEmpty(ViewBag.Error))
    {
        <div class="alert alert-danger"><strong>Error! </strong>@ViewBag.Error</div>
    }
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.numeroID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.numeroID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.numeroID, "", new { @class = "text-danger" })
            </div>
        </div>        

        <div class="form-group">
            @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ID, ViewBag.ListaEventos as SelectList, "--Seleccionar--", new {  @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
            </div>
        </div>        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "Evento")
</div>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
